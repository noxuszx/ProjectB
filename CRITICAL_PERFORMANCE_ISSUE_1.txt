===============================================================================
AI TASK: FIX CRITICAL PERFORMANCE ISSUE - HEARTBEAT EVENT ABUSE
Roblox Lua Drag & Drop System Optimization
===============================================================================

## TASK OBJECTIVE
Optimize a Roblox drag-and-drop system that currently has a critical performance bottleneck. The hover detection system runs at 60fps constantly, consuming 10-30% of frame budget unnecessarily.

## PROBLEM ANALYSIS
The current implementation connects to RunService.Heartbeat and runs expensive operations every frame:
- Mouse raycast operations (60 times per second)
- Object validation checks (60 times per second) 
- Highlight creation/destruction
- Console spam from debug prints

## CURRENT PROBLEMATIC CODE

### Main Issue (DragDropClient.lua lines 318-320):
```lua
-- Add hover detection
RunService.Heartbeat:Connect(function()
    WeldSystem.updateHoveredObject(isDragging, isDraggableObject)
end)
```

### Supporting Functions:

**WeldSystem.updateHoveredObject (WeldSystem.lua lines 34-48):**
```lua
function WeldSystem.updateHoveredObject(isDragging, isDraggableObjectFunc)
    local target = mouse.Target
    
    -- Only highlight draggable objects when not dragging
    if not isDragging and target and isDraggableObjectFunc(target) and target ~= hoveredObject then
        removeHoverHighlight()
        hoveredObject = target
        hoverHighlight = createHoverHighlight(target)
    elseif not target or not isDraggableObjectFunc(target) or isDragging then
        if hoveredObject then
            removeHoverHighlight()
            hoveredObject = nil
        end
    end
end
```

**isDraggableObject function (DragDropClient.lua lines 91-111):**
```lua
local function isDraggableObject(object)
    if not object or not object.Parent then return false end
    
    local parent = object.Parent
    
    if parent and (parent.Name == "SpawnedVegetation" or 
                   parent.Name == "SpawnedRocks" or 
                   parent.Name == "SpawnedStructures" or
                   parent.Name == "Chunks") then
        print("Ignoring environment object:", object.Name, "in", parent.Name)
        return false
    end
    
    if object:IsA("Part") and not object.Anchored and parent == workspace then
        print("Found draggable unanchored part:", object.Name)
        return true
    end
    
    print("Object not draggable - either anchored or not in workspace")
    return false
end
```

**Highlight management (WeldSystem.lua lines 17-32):**
```lua
local function createHoverHighlight(object)
    local highlight = Instance.new("SelectionBox")
    highlight.Adornee = object
    highlight.Color3 = Color3.fromRGB(255, 255, 0) -- Yellow for hover
    highlight.Transparency = 0.5
    highlight.LineThickness = 0.15
    highlight.Parent = object
    return highlight
end

local function removeHoverHighlight()
    if hoverHighlight then
        hoverHighlight:Destroy()
        hoverHighlight = nil
    end
end
```

## OPTIMIZATION REQUIREMENTS

1. **Eliminate Heartbeat Abuse**: Stop running hover detection every frame
2. **Implement Smart Caching**: Only update when mouse.Target actually changes
3. **Add Movement Detection**: Only run logic when mouse position changes
4. **Remove Debug Spam**: Eliminate console prints in production code
5. **Maintain Functionality**: Preserve existing hover highlighting behavior
6. **Performance Target**: Reduce CPU usage by 70-90% for hover detection

## TECHNICAL CONSTRAINTS

- Must work in Roblox Lua environment
- Should use RunService events efficiently
- Must maintain current visual behavior (yellow hover highlights)
- Should preserve isDragging state checking
- Need to handle mouse.Target properly (can be nil)
- Must clean up highlights properly to prevent memory leaks

## EXPECTED SOLUTION APPROACH

1. Cache previous mouse.Target to detect actual changes
2. Use a throttled update mechanism (not every frame)
3. Implement proper debouncing for highlight updates
4. Remove or conditionally compile debug prints
5. Consider using mouse movement events instead of Heartbeat

## SUCCESS CRITERIA

- Hover detection logic runs only when necessary
- No performance regression in visual behavior
- Significant reduction in CPU usage during idle hovering
- Clean, maintainable code that follows Roblox best practices
- No memory leaks from highlight management

## DELIVERABLES REQUESTED

1. **Optimized updateHoveredObject function**
2. **Improved Heartbeat connection logic** 
3. **Enhanced isDraggableObject function** (remove debug prints)
4. **Any additional helper functions** needed for optimization
5. **Brief explanation** of the optimization strategy used

Please provide the complete optimized code that solves this critical performance bottleneck.

===============================================================================
